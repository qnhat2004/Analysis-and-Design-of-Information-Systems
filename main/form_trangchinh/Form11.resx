<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABUAFUDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD50oopskgjAJySTgKBkk9gB3NU2krs/p0dVjS9Nvtdu1tdLsbn
        UrluBFbRlj/hX0b8Df2OrvxZZW+v+OzPpemSYeDSIyVnmXsZCPuAjtnPtX0H8RPGnhb9lf4Xy6ppej2d
        jg+RY2NugR7qX/aYckDIyT61+S5tx/Qo4hYHKqftqrdt7Rv69fy8zxa2ZxjP2OHjzyenlf8AX+tT460X
        9lv4qa5CssPhVrRG6fbp/KP6Ka0rn9j34s2sZf8AsOxm/wBmG+Jb8tleleDP+Ci2iaha3TeM9HlsbxXA
        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
        ClQpqNKCivJJfkehhoq2xXooorrOwKKKKAP/2Q==
</value>
  </data>
</root>